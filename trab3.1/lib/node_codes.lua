--==============================================================================
-- Debug
--==============================================================================



--==============================================================================
-- Dependency
--==============================================================================



--==============================================================================
-- Data Structure
--==============================================================================

local Nodes = {}

-- code of each node
--  {
--    ["node id"] = $number,
--  }
local codes = {
  ["COMAND_ATTRIBUTION"]      = 021,
  ["COMAND_RETURN"]           = 022,
  ["COMAND_WHILE"]            = 023,
  ["DECLARE"]                 = 002,
  ["EXPRESSION_CALL"]         = 033,
  ["EXPRESSION_PARENTHESIS"]  = 035,
  ["EXPRESSION_NEW"]          = 037,
  ["EXPRESSION_NOT"]          = 036,
  ["EXPRESSION_OPERATOR"]     = 031,
  ["EXPRESSION_VALUE"]        = 034,
  ["EXPRESSION_VARIABLE"]     = 032,
  ["FUNCTION"]                = 011,
  ["FUNCTION_CALL"]           = 003,
  ["PARAMETER"]               = 012,
  ["PROGRAM"]                 = 001,
  ["VARIABLE"]                = 004,
}


--==============================================================================
-- Public Methods
--==============================================================================

function Nodes.GetNodesList ()
  return codes
end

function Nodes.GetNodeName (node_code)
  assert(type(node_code) == "number")
  for name, code in pairs(codes) do
    if (code == node_code) then
      return name
    end
  end
  return nil
end


--==============================================================================
-- Private Methods
--==============================================================================



--==============================================================================
-- Return
--==============================================================================

return Nodes