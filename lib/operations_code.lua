--==============================================================================
-- Debug
--==============================================================================



--==============================================================================
-- Dependency
--==============================================================================



--==============================================================================
-- Data Structure
--==============================================================================

local Class = {}

-- code of each node
--  {
--    ["operation id"] = $number,
--  }
local codes = {
  ["CALLID"]            = 01,
  ["GOTO"]              = 02,
  ["IFFALSEGOTO"]       = 03,
  ["IFGOTO"]            = 04,
  ["LABEL"]             = 05,
  ["PARAM"]             = 06,
  ["RETURN"]            = 07,
  
  
  ["ID=rval"]           = 10,
  ["ID=BYTErval"]       = 11,
  ["ID=ID[rval]"]       = 12,
  ["ID=BYTEID[rval]"]   = 13,
  ["ID=unoprval"]       = 14,
  ["ID=rvalEQrval"]     = 15,
  ["ID=rvalNErval"]     = 16,
  ["ID=rvalGErval"]     = 17,
  ["ID=rvalLErval"]     = 18,
  ["ID=rval<rval"]      = 19,
  ["ID=rval>rval"]      = 20,
  ["ID=rval+rval"]      = 21,
  ["ID=rval-rval"]      = 22,
  ["ID=rval*rval"]      = 23,
  ["ID=rval/rval"]      = 24,
  ["ID[rval]=rval"]     = 25,
  ["ID[rval]=BYTErval"] = 26,
}


--==============================================================================
-- Public Methods
--==============================================================================

function Class.GetList ()
  return codes
end

function Class.GetName (operation_code)
  assert(type(node_code) == "number")
  for name, code in pairs(codes) do
    if (code == node_code) then
      return name
    end
  end
  return nil
end


--==============================================================================
-- Private Methods
--==============================================================================



--==============================================================================
-- Return
--==============================================================================

return Class